{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/apis/user/src/app.config.ts","webpack:///./apps/apis/user/src/app.module.ts","webpack:///./apps/apis/user/src/core/configuration/configuration.module.ts","webpack:///./apps/apis/user/src/core/database/database.module.ts","webpack:///./apps/apis/user/src/core/database/sources/api/api.module.ts","webpack:///./apps/apis/user/src/core/database/sources/api/connection.module.ts","webpack:///./apps/apis/user/src/core/database/sources/api/connection.provider.ts","webpack:///./apps/apis/user/src/core/database/sources/api/entities/person.entity.ts","webpack:///./apps/apis/user/src/core/database/sources/api/entities/user.entity.ts","webpack:///./apps/apis/user/src/core/database/sources/api/migrations/1610493939987-CreatePersonsTable.ts","webpack:///./apps/apis/user/src/core/database/sources/api/migrations/1610494267701-CreateUsersTable.ts","webpack:///./apps/apis/user/src/core/database/sources/api/orm.module.ts","webpack:///./apps/apis/user/src/core/encryption/encryption.module.ts","webpack:///./apps/apis/user/src/core/encryption/salt/salt.module.ts","webpack:///./apps/apis/user/src/core/encryption/salt/salt.service.ts","webpack:///./apps/apis/user/src/core/encryption/salt/saltConfiguration.ts","webpack:///./apps/apis/user/src/core/observability/observability.module.ts","webpack:///./apps/apis/user/src/features/account/account.controller.ts","webpack:///./apps/apis/user/src/features/account/account.interactor.ts","webpack:///./apps/apis/user/src/features/account/account.module.ts","webpack:///./apps/apis/user/src/features/account/account.service.ts","webpack:///./apps/apis/user/src/features/account/auth-login.dto.ts","webpack:///./apps/apis/user/src/features/account/auth.controller.ts","webpack:///./apps/apis/user/src/features/account/jwt/cookie.extractor.ts","webpack:///./apps/apis/user/src/features/account/jwt/jwt.config.ts","webpack:///./apps/apis/user/src/features/account/jwt/jwt.constants.ts","webpack:///./apps/apis/user/src/features/account/jwt/jwt.guard.ts","webpack:///./apps/apis/user/src/features/account/jwt/jwt.module.ts","webpack:///./apps/apis/user/src/features/account/jwt/jwt.strategy.ts","webpack:///./apps/apis/user/src/features/account/new-account.dto.ts","webpack:///./apps/apis/user/src/features/features.module.ts","webpack:///./apps/apis/user/src/main.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/jwt\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"bcrypt\"","webpack:///external \"class-validator\"","webpack:///external \"cookie-parser\"","webpack:///external \"express\"","webpack:///external \"lodash/toFinite\"","webpack:///external \"passport-jwt\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { registerAs } from '@nestjs/config';\nimport toFinite from 'lodash/toFinite';\n\nexport type AppConfig = {\n  port: number;\n};\n\nexport const appConfig = registerAs('app', () => ({\n  port: toFinite(process.env.PORT) || 3333,\n}));\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { appConfig } from './app.config';\nimport { ObservabilityModule } from './core/observability/observability.module';\nimport { FeaturesModule } from './features/features.module';\nimport { ConfigurationModule } from './core/configuration/configuration.module';\n\n@Module({\n  imports: [\n    ConfigurationModule,\n    ConfigModule.forFeature(appConfig),\n    ObservabilityModule,\n    FeaturesModule,\n  ],\n})\nexport class AppModule {}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['.env'],\n    }),\n  ],\n})\nexport class ConfigurationModule {}\n","import { Module } from '@nestjs/common';\nimport { ApiModule } from './sources/api/api.module';\n\n@Module({\n  imports: [ApiModule],\n  exports: [ApiModule],\n})\nexport class DatabaseModule {}\n","import { Module } from '@nestjs/common';\nimport { OrmModule } from './orm.module';\nimport { ConnectionModule } from './connection.module';\nimport { EncryptionModule } from '../../../encryption/encryption.module';\n\n@Module({\n  imports: [EncryptionModule, OrmModule, ConnectionModule],\n  exports: [OrmModule],\n})\nexport class ApiModule {}\n","import { Module } from '@nestjs/common';\nimport { ConnectionProvider } from './connection.provider';\n\n@Module({\n  providers: [ConnectionProvider],\n  exports: [ConnectionProvider],\n})\nexport class ConnectionModule {}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmModuleOptions } from '@nestjs/typeorm/dist/interfaces/typeorm-options.interface';\nimport config from './ormconfig.json';\nimport { CreatePersonsTable1610493939987 } from './migrations/1610493939987-CreatePersonsTable';\nimport { CreateUsersTable1610494267701 } from './migrations/1610494267701-CreateUsersTable';\nimport { Person } from './entities/person.entity';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class ConnectionProvider {\n  config: TypeOrmModuleOptions = {\n    ...(config as TypeOrmModuleOptions),\n    migrations: [\n      CreatePersonsTable1610493939987,\n      CreateUsersTable1610494267701,\n    ],\n    entities: [Person, User],\n  };\n}\n","import { Column, Entity, Index, OneToMany, PrimaryColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity('persons')\nexport class Person {\n  @PrimaryColumn({ type: 'uuid' })\n  id: string;\n\n  @Index()\n  @Column({ name: 'name', type: 'varchar', length: 256 })\n  name: string;\n\n  @OneToMany(() => User, (user) => user.person, { lazy: true })\n  users: Promise<User[]>;\n}\n","import {\n  BaseEntity,\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryColumn,\n} from 'typeorm';\nimport { Person } from './person.entity';\nimport { SaltService } from '../../../../encryption/salt/salt.service';\n\n@Entity('users')\nexport class User extends BaseEntity {\n  @PrimaryColumn({ type: 'uuid' })\n  id: string;\n\n  @Index()\n  @Column({ name: 'email', type: 'varchar', length: 254, unique: true })\n  email: string;\n\n  @Column({ name: 'password', type: 'varchar', length: 256 })\n  password: string;\n\n  @Column({ name: 'person_id', type: 'character varying', nullable: false })\n  personId: string;\n\n  @ManyToOne(() => Person, (person) => person.users, {\n    lazy: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'NO ACTION',\n  })\n  @JoinColumn({ name: 'person_id' })\n  person: Promise<Person>;\n\n  async comparePassword(\n    password: string,\n    saltService: SaltService\n  ): Promise<boolean> {\n    return saltService.compare(password, this.password);\n  }\n}\n","import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class CreatePersonsTable1610493939987 implements MigrationInterface {\n  public static TABLE_NAME = 'persons';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.createTable(\n      new Table({\n        name: CreatePersonsTable1610493939987.TABLE_NAME,\n        indices: [\n          {\n            columnNames: ['name'],\n          },\n        ],\n        columns: [\n          {\n            name: 'id',\n            type: 'uuid',\n            isPrimary: true,\n            generationStrategy: 'uuid',\n          },\n          {\n            name: 'name',\n            type: 'varchar',\n            length: '256',\n          },\n        ],\n      }),\n      false,\n      false,\n      true\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.dropTable(\n      CreatePersonsTable1610493939987.TABLE_NAME,\n      false,\n      false,\n      true\n    );\n  }\n}\n","import { MigrationInterface, QueryRunner, Table } from 'typeorm';\nimport { CreatePersonsTable1610493939987 } from './1610493939987-CreatePersonsTable';\nimport { TableColumnOptions } from 'typeorm/schema-builder/options/TableColumnOptions';\nimport { TableForeignKeyOptions } from 'typeorm/schema-builder/options/TableForeignKeyOptions';\n\nexport class CreateUsersTable1610494267701 implements MigrationInterface {\n  public static TABLE_NAME = 'users';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const foreignKeys: TableForeignKeyOptions[] = [\n      {\n        columnNames: ['person_id'],\n        referencedColumnNames: ['id'],\n        referencedTableName: CreatePersonsTable1610493939987.TABLE_NAME,\n        onDelete: 'CASCADE',\n        onUpdate: 'NO ACTION',\n      },\n    ];\n\n    const indices = [\n      {\n        columnNames: ['email'],\n      },\n    ];\n\n    const columns: TableColumnOptions[] = [\n      {\n        name: 'id',\n        type: 'uuid',\n        isPrimary: true,\n        generationStrategy: 'uuid',\n      },\n      {\n        name: 'email',\n        type: 'varchar',\n        length: '254',\n        isUnique: true,\n      },\n      {\n        name: 'password',\n        type: 'varchar',\n        length: '256',\n      },\n      {\n        name: 'person_id',\n        type: 'uuid',\n        isNullable: false,\n      },\n    ];\n\n    await queryRunner.createTable(\n      new Table({\n        name: CreateUsersTable1610494267701.TABLE_NAME,\n        foreignKeys,\n        indices,\n        columns,\n      }),\n      false,\n      true,\n      true\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.dropTable(\n      CreateUsersTable1610494267701.TABLE_NAME,\n      false,\n      true,\n      true\n    );\n  }\n}\n","import { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConnectionProvider } from './connection.provider';\nimport { ConnectionModule } from './connection.module';\nimport { TypeOrmModuleOptions } from '@nestjs/typeorm/dist/interfaces/typeorm-options.interface';\n\nexport const OrmModule = TypeOrmModule.forRootAsync({\n  imports: [ConnectionModule],\n  useFactory(connection: ConnectionProvider) {\n    return connection.config as TypeOrmModuleOptions;\n  },\n  inject: [ConnectionProvider],\n});\n","import { Module } from '@nestjs/common';\nimport { SaltModule } from './salt/salt.module';\n\n@Module({\n  imports: [SaltModule],\n  exports: [SaltModule],\n})\nexport class EncryptionModule {}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { saltConfiguration } from './saltConfiguration';\nimport { SaltService } from './salt.service';\n\n@Module({\n  imports: [ConfigModule.forFeature(saltConfiguration)],\n  providers: [SaltService],\n  exports: [SaltService],\n})\nexport class SaltModule {}\n","import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport bcrypt from 'bcrypt';\nimport { SaltConfiguration } from './saltConfiguration';\n\n@Injectable()\nexport class SaltService {\n  rounds: SaltConfiguration['rounds'];\n\n  constructor(private readonly configService: ConfigService) {\n    this.rounds = configService.get<SaltConfiguration['rounds']>(\n      'salt.rounds',\n      10\n    );\n  }\n\n  async compare(str: string, hash: string): Promise<boolean> {\n    return bcrypt.compare(str, hash);\n  }\n\n  async salt(str: string): Promise<string> {\n    return bcrypt.hash(str, this.rounds);\n  }\n}\n","import { registerAs } from '@nestjs/config';\nimport toFinite from 'lodash/toFinite';\n\nexport type SaltConfiguration = {\n  rounds: number;\n};\n\nexport const saltConfiguration = registerAs(\n  'salt',\n  (): SaltConfiguration => ({\n    rounds: toFinite(process.env.SALT_ROUNDS) || 10,\n  })\n);\n","import { Logger, Module } from '@nestjs/common';\n\n@Module({\n  providers: [Logger],\n  exports: [Logger],\n})\nexport class ObservabilityModule {}\n","import {\n  Body,\n  Controller,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { JwtGuard } from './jwt/jwt.guard';\nimport { AccountInteractor } from './account.interactor';\nimport { NewAccountDto } from './new-account.dto';\n\n@Controller('account')\nexport class AccountController {\n  constructor(private readonly accountInteractor: AccountInteractor) {}\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  @UsePipes(ValidationPipe)\n  async createAccount(@Body() body: NewAccountDto) {\n    await this.accountInteractor.create(body);\n  }\n\n  @Delete()\n  @UseGuards(JwtGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async deleteAccount() {\n    await this.accountInteractor.delete();\n  }\n}\n","import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../../core/database/sources/api/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Person } from '../../core/database/sources/api/entities/person.entity';\nimport { SaltService } from '../../core/encryption/salt/salt.service';\nimport { NewAccountDto } from './new-account.dto';\n\n/**\n * @mermaid\n * erDiagram\n *    %% All entities also carry dates with soft deletion\n *    PERSON {\n *      uuid id\n *      string name\n *    }\n *    %% Passwords are salted\n *    USER {\n *      uuid id\n *      uuid person_id\n *      string email\n *      string password\n *    }\n *    %% Account is an interactor\n *    %% It is injected into requests' protected contexts\n *    ACCOUNT_INTERACTOR {\n *      uuid session_id\n *      uuid user_id\n *    }\n *    PERSON ||--|{ USER : has\n *    ACCOUNT_INTERACTOR ||--|| USER : administers\n */\n@Injectable()\nexport class AccountInteractor {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository<User>,\n    @InjectRepository(Person)\n    private readonly personRepository: Repository<Person>,\n    private readonly saltService: SaltService\n  ) {}\n\n  private user: User;\n\n  async validateCredentials(\n    email: string,\n    password: string\n  ): Promise<User | null> {\n    const user = await this.userRepository.findOne({ where: { email } });\n\n    if (!this.user) {\n      return null;\n    }\n\n    const matches = await this.user.comparePassword(password, this.saltService);\n\n    if (!matches) {\n      return null;\n    }\n\n    return (this.user = user);\n  }\n\n  async create({ email, name, password }: NewAccountDto): Promise<User | null> {\n    if (this.user) {\n      throw new InternalServerErrorException('user should be already set');\n    }\n\n    await this.userRepository.manager.transaction(async (manager) => {\n      const personRepository = manager.getRepository<Person>(Person);\n      const person: Person = personRepository.create({ name });\n      const {\n        identifiers: [{ id }],\n      } = await manager.insert(Person, person);\n\n      const userRepository = manager.getRepository<User>(User);\n      const user: User = userRepository.create({\n        email,\n        password,\n        personId: id,\n      });\n      await manager.insert(User, user);\n    });\n\n    return this.userRepository.findOne({ where: { email } });\n  }\n\n  async delete(): Promise<void> {\n    if (!this.user) {\n      throw new InternalServerErrorException(\n        'user should have been set already by jwt-guard'\n      );\n    }\n\n    const person = await this.user.person;\n    await this.personRepository.delete(person.id);\n    delete this.user;\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { AccountController } from './account.controller';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from './jwt/jwt.module';\nimport { AccountService } from './account.service';\nimport { AccountInteractor } from './account.interactor';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../../core/database/sources/api/entities/user.entity';\nimport { Person } from '../../core/database/sources/api/entities/person.entity';\nimport { EncryptionModule } from '../../core/encryption/encryption.module';\nimport { DatabaseModule } from '../../core/database/database.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    JwtModule,\n    TypeOrmModule.forFeature([User, Person]),\n    EncryptionModule,\n  ],\n  providers: [AccountService, AccountInteractor],\n  controllers: [AuthController, AccountController],\n})\nexport class AccountModule {}\n","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AccountInteractor } from './account.interactor';\nimport { User } from '../../core/database/sources/api/entities/user.entity';\n\n@Injectable()\nexport class AccountService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly accountInteractor: AccountInteractor\n  ) {}\n\n  async validate(email: string, password: string): Promise<User | null> {\n    return await this.accountInteractor.validateCredentials(email, password);\n  }\n}\n","import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthLoginDto {\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n","import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Res,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { AuthLoginDto } from './auth-login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtPayloadDto } from './jwt/jwt-payload.dto';\nimport { Response } from 'express';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtConfig } from './jwt/jwt.config';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async login(\n    @Body() body: AuthLoginDto,\n    @Res({ passthrough: true }) response: Response\n  ) {\n    const user = await this.accountService.validate(body.email, body.password);\n    if (!user) {\n      throw new UnauthorizedException('wrong credentials');\n    }\n\n    const payload: JwtPayloadDto = { email: user.email };\n    const token = await this.jwtService.signAsync(payload);\n    const jwtConfig = this.configService.get<JwtConfig>('jwt');\n    response.cookie(jwtConfig.cookieName, token, { httpOnly: true });\n  }\n\n  @Post('logout')\n  async logout(@Res({ passthrough: true }) response: Response) {\n    const jwtConfig = this.configService.get<JwtConfig>('jwt');\n    response.clearCookie(jwtConfig.cookieName);\n  }\n}\n","import { JwtFromRequestFunction } from 'passport-jwt';\nimport { Request } from 'express';\n\nexport const cookieExtractor = (cookieName: string): JwtFromRequestFunction => (\n  request: Request\n) => {\n  if (!request.cookies) {\n    return null;\n  }\n\n  return request.cookies[cookieName] || null;\n};\n","import { registerAs } from '@nestjs/config';\nimport { JwtModuleOptions } from '@nestjs/jwt/dist/interfaces/jwt-module-options.interface';\n\nexport type JwtConfig = {\n  secret: string;\n  cookieName: string;\n} & Partial<JwtModuleOptions>;\n\nexport const jwtConfig = registerAs(\n  'jwt',\n  () =>\n    ({\n      secret: process.env.JWT_SECRET || 'asecret',\n      cookieName: process.env.JWT_COOKIE_NAME || 'user-api-user-token',\n      signOptions: { expiresIn: process.env.JWT_EXPIRES_IN || '120m' },\n    } as JwtConfig)\n);\n","export const JWT_STRATEGY_NAME = 'jwt_strategy';\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { JWT_STRATEGY_NAME } from './jwt.constants';\n\n@Injectable()\nexport class JwtGuard extends AuthGuard(JWT_STRATEGY_NAME) {}\n","import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { jwtConfig, JwtConfig } from './jwt.config';\nimport { JwtModule as NestJwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtGuard } from './jwt.guard';\n\nconst config = ConfigModule.forFeature(jwtConfig);\n\nconst jwtModule = NestJwtModule.registerAsync({\n  imports: [ConfigModule, config],\n  useFactory(configService: ConfigService) {\n    return configService.get<JwtConfig>('jwt');\n  },\n  inject: [ConfigService],\n});\n\n@Module({\n  imports: [PassportModule, jwtModule, ConfigModule, config],\n  providers: [JwtStrategy, JwtGuard],\n  exports: [PassportModule, jwtModule, JwtStrategy, JwtGuard, config],\n})\nexport class JwtModule {}\n","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtConfig } from './jwt.config';\nimport { cookieExtractor } from './cookie.extractor';\nimport { JWT_STRATEGY_NAME } from './jwt.constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, JWT_STRATEGY_NAME) {\n  constructor(configService: ConfigService) {\n    const jwtConfig = configService.get<JwtConfig>('jwt');\n\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        cookieExtractor(jwtConfig.cookieName),\n      ]),\n      secretOrKey: jwtConfig.secret,\n      ignoreExpiration: false,\n    });\n  }\n}\n","import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class NewAccountDto {\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Length(8, 256)\n  password: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n}\n","import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AccountModule } from './account/account.module';\nimport * as cookieParser from 'cookie-parser';\n\n@Module({\n  imports: [AccountModule],\n})\nexport class FeaturesModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(cookieParser());\n  }\n}\n","import { NestFactory } from '@nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { AppModule } from './app.module';\nimport { ConfigService } from '@nestjs/config';\nimport { AppConfig } from './app.config';\n\nvoid (async function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const logger = app.get<Logger>(Logger);\n  const config = app.get<ConfigService>(ConfigService);\n  const port = config.get<AppConfig['port']>('app.port');\n  await app.listen(port, () => {\n    logger.log('Listening at http://localhost:' + port + '/');\n  });\n})();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-validator\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"express\");","module.exports = require(\"lodash/toFinite\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}